{"ast":null,"code":"import _slicedToArray from\"/Users/francocastromiranda/dubai/teste/brandu/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useState,useRef,useEffect}from\"react\";import{Snackbar,withStyles}from\"@material-ui/core\";import{jsx as _jsx}from\"react/jsx-runtime\";var styles=function styles(theme){return{root:{backgroundColor:theme.palette.primary.main,paddingTop:0,paddingBottom:0}};};function ConsecutiveSnackbars(props){var classes=props.classes,getPushMessageFromChild=props.getPushMessageFromChild;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOpen=_useState2[0],setIsOpen=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),messageInfo=_useState4[0],setMessageInfo=_useState4[1];var queue=useRef([]);var processQueue=useCallback(function(){if(queue.current.length>0){setMessageInfo(queue.current.shift());setIsOpen(true);}},[setMessageInfo,setIsOpen,queue]);var handleClose=useCallback(function(_,reason){if(reason===\"clickaway\"){return;}setIsOpen(false);},[setIsOpen]);var pushMessage=useCallback(function(message){queue.current.push({message:message,key:new Date().getTime()});if(isOpen){// immediately begin dismissing current message\n// to start showing new one\nsetIsOpen(false);}else{processQueue();}},[queue,isOpen,setIsOpen,processQueue]);useEffect(function(){getPushMessageFromChild(pushMessage);},[getPushMessageFromChild,pushMessage]);return/*#__PURE__*/_jsx(Snackbar,{disableWindowBlurListener:true,anchorOrigin:{vertical:\"bottom\",horizontal:\"left\"},open:isOpen,autoHideDuration:6000,onClose:handleClose,onExited:processQueue,ContentProps:{classes:{root:classes.root}},message:/*#__PURE__*/_jsx(\"span\",{children:messageInfo.message?messageInfo.message.text:null})},messageInfo.key);}export default withStyles(styles,{withTheme:true})(ConsecutiveSnackbars);","map":{"version":3,"sources":["/Users/francocastromiranda/dubai/teste/brandu/src/shared/components/ConsecutiveSnackbarMessages.js"],"names":["React","useCallback","useState","useRef","useEffect","Snackbar","withStyles","styles","theme","root","backgroundColor","palette","primary","main","paddingTop","paddingBottom","ConsecutiveSnackbars","props","classes","getPushMessageFromChild","isOpen","setIsOpen","messageInfo","setMessageInfo","queue","processQueue","current","length","shift","handleClose","_","reason","pushMessage","message","push","key","Date","getTime","vertical","horizontal","text","withTheme"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,CAA6BC,QAA7B,CAAuCC,MAAvC,CAA+CC,SAA/C,KAAgE,OAAhE,CAEA,OAASC,QAAT,CAAmBC,UAAnB,KAAqC,mBAArC,C,2CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,QAAY,CACzBC,IAAI,CAAE,CACJC,eAAe,CAAEF,KAAK,CAACG,OAAN,CAAcC,OAAd,CAAsBC,IADnC,CAEJC,UAAU,CAAE,CAFR,CAGJC,aAAa,CAAE,CAHX,CADmB,CAAZ,EAAf,CAQA,QAASC,CAAAA,oBAAT,CAA8BC,KAA9B,CAAqC,CACnC,GAAQC,CAAAA,OAAR,CAA6CD,KAA7C,CAAQC,OAAR,CAAiBC,uBAAjB,CAA6CF,KAA7C,CAAiBE,uBAAjB,CACA,cAA4BjB,QAAQ,CAAC,KAAD,CAApC,wCAAOkB,MAAP,eAAeC,SAAf,eACA,eAAsCnB,QAAQ,CAAC,EAAD,CAA9C,yCAAOoB,WAAP,eAAoBC,cAApB,eACA,GAAMC,CAAAA,KAAK,CAAGrB,MAAM,CAAC,EAAD,CAApB,CAEA,GAAMsB,CAAAA,YAAY,CAAGxB,WAAW,CAAC,UAAM,CACrC,GAAIuB,KAAK,CAACE,OAAN,CAAcC,MAAd,CAAuB,CAA3B,CAA8B,CAC5BJ,cAAc,CAACC,KAAK,CAACE,OAAN,CAAcE,KAAd,EAAD,CAAd,CACAP,SAAS,CAAC,IAAD,CAAT,CACD,CACF,CAL+B,CAK7B,CAACE,cAAD,CAAiBF,SAAjB,CAA4BG,KAA5B,CAL6B,CAAhC,CAOA,GAAMK,CAAAA,WAAW,CAAG5B,WAAW,CAAC,SAAC6B,CAAD,CAAIC,MAAJ,CAAe,CAC7C,GAAIA,MAAM,GAAK,WAAf,CAA4B,CAC1B,OACD,CACDV,SAAS,CAAC,KAAD,CAAT,CACD,CAL8B,CAK5B,CAACA,SAAD,CAL4B,CAA/B,CAOA,GAAMW,CAAAA,WAAW,CAAG/B,WAAW,CAAC,SAAAgC,OAAO,CAAI,CACzCT,KAAK,CAACE,OAAN,CAAcQ,IAAd,CAAmB,CACjBD,OAAO,CAAPA,OADiB,CAEjBE,GAAG,CAAE,GAAIC,CAAAA,IAAJ,GAAWC,OAAX,EAFY,CAAnB,EAIA,GAAIjB,MAAJ,CAAY,CACV;AACA;AACAC,SAAS,CAAC,KAAD,CAAT,CACD,CAJD,IAIO,CACLI,YAAY,GACb,CACF,CAZ8B,CAY5B,CAACD,KAAD,CAAQJ,MAAR,CAAgBC,SAAhB,CAA2BI,YAA3B,CAZ4B,CAA/B,CAcArB,SAAS,CAAC,UAAM,CACde,uBAAuB,CAACa,WAAD,CAAvB,CACD,CAFQ,CAEN,CAACb,uBAAD,CAA0Ba,WAA1B,CAFM,CAAT,CAIA,mBACE,KAAC,QAAD,EACE,yBAAyB,KAD3B,CAGE,YAAY,CAAE,CACZM,QAAQ,CAAE,QADE,CAEZC,UAAU,CAAE,MAFA,CAHhB,CAOE,IAAI,CAAEnB,MAPR,CAQE,gBAAgB,CAAE,IARpB,CASE,OAAO,CAAES,WATX,CAUE,QAAQ,CAAEJ,YAVZ,CAWE,YAAY,CAAE,CACZP,OAAO,CAAE,CACPT,IAAI,CAAES,OAAO,CAACT,IADP,CADG,CAXhB,CAgBE,OAAO,cACL,sBAAOa,WAAW,CAACW,OAAZ,CAAsBX,WAAW,CAACW,OAAZ,CAAoBO,IAA1C,CAAiD,IAAxD,EAjBJ,EAEOlB,WAAW,CAACa,GAFnB,CADF,CAuBD,CAOD,cAAe7B,CAAAA,UAAU,CAACC,MAAD,CAAS,CAAEkC,SAAS,CAAE,IAAb,CAAT,CAAV,CAAwCzB,oBAAxC,CAAf","sourcesContent":["import React, { useCallback, useState, useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Snackbar, withStyles } from \"@material-ui/core\";\n\nconst styles = (theme) => ({\n  root: {\n    backgroundColor: theme.palette.primary.main,\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n});\n\nfunction ConsecutiveSnackbars(props) {\n  const { classes, getPushMessageFromChild } = props;\n  const [isOpen, setIsOpen] = useState(false);\n  const [messageInfo, setMessageInfo] = useState({});\n  const queue = useRef([]);\n\n  const processQueue = useCallback(() => {\n    if (queue.current.length > 0) {\n      setMessageInfo(queue.current.shift());\n      setIsOpen(true);\n    }\n  }, [setMessageInfo, setIsOpen, queue]);\n\n  const handleClose = useCallback((_, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setIsOpen(false);\n  }, [setIsOpen]);\n\n  const pushMessage = useCallback(message => {\n    queue.current.push({\n      message,\n      key: new Date().getTime(),\n    });\n    if (isOpen) {\n      // immediately begin dismissing current message\n      // to start showing new one\n      setIsOpen(false);\n    } else {\n      processQueue();\n    }\n  }, [queue, isOpen, setIsOpen, processQueue]);\n\n  useEffect(() => {\n    getPushMessageFromChild(pushMessage);\n  }, [getPushMessageFromChild, pushMessage]);\n\n  return (\n    <Snackbar\n      disableWindowBlurListener\n      key={messageInfo.key}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\",\n      }}\n      open={isOpen}\n      autoHideDuration={6000}\n      onClose={handleClose}\n      onExited={processQueue}\n      ContentProps={{\n        classes: {\n          root: classes.root,\n        },\n      }}\n      message={\n        <span>{messageInfo.message ? messageInfo.message.text : null}</span>\n      }\n    />\n  );\n\n}\n\nConsecutiveSnackbars.propTypes = {\n  getPushMessageFromChild: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(ConsecutiveSnackbars);\n"]},"metadata":{},"sourceType":"module"}