{"ast":null,"code":"import _slicedToArray from\"/Users/francocastromiranda/dubai/teste/brandu/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Users/francocastromiranda/dubai/teste/brandu/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useState,useCallback}from\"react\";import{Tooltip,Typography,withStyles}from\"@material-ui/core\";import HelpIconOutline from\"@material-ui/icons/HelpOutline\";import{jsx as _jsx}from\"react/jsx-runtime\";var styles=function styles(theme){return{tooltipTypo:_objectSpread(_objectSpread({whiteSpace:\"pre-line !important\"},theme.typography.caption),{},{color:theme.palette.common.white}),tooltip:{verticalAlign:\"middle\",fontSize:\"1.25rem\"},helpIcon:{marginLeft:theme.spacing(1),\"@media (max-width: 350px)\":{marginLeft:theme.spacing(0.5)},transition:theme.transitions.create([\"color\"],{duration:theme.transitions.duration.short,easing:theme.transitions.easing.easeInOut})}};};function HelpIcon(props){var classes=props.classes,title=props.title;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isHovered=_useState2[0],setIsHovered=_useState2[1];var onMouseOver=useCallback(function(){setIsHovered(true);},[]);var onMouseLeave=useCallback(function(){setIsHovered(false);},[]);return/*#__PURE__*/_jsx(Tooltip,{title:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",className:classes.tooltipTypo,children:title}),className:classes.tooltip,enterTouchDelay:300,children:/*#__PURE__*/_jsx(HelpIconOutline/**\n         * We have to use onMouseOver and not onMouseEnter, because if we have overlapping\n         * tooltips, the onMouseEnter wont fire when the old tooltip is fading\n         * */,{onMouseOver:onMouseOver,onFocus:onMouseOver,onBlur:onMouseLeave,onMouseLeave:onMouseLeave,color:isHovered?\"primary\":\"inherit\",className:classes.helpIcon,style:{cursor:isHovered?\"pointer\":\"auto\"}})});}export default withStyles(styles,{withTheme:true})(HelpIcon);","map":{"version":3,"sources":["/Users/francocastromiranda/dubai/teste/brandu/src/shared/components/HelpIcon.js"],"names":["React","useState","useCallback","Tooltip","Typography","withStyles","HelpIconOutline","styles","theme","tooltipTypo","whiteSpace","typography","caption","color","palette","common","white","tooltip","verticalAlign","fontSize","helpIcon","marginLeft","spacing","transition","transitions","create","duration","short","easing","easeInOut","HelpIcon","props","classes","title","isHovered","setIsHovered","onMouseOver","onMouseLeave","cursor","withTheme"],"mappings":"uUAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,WAA1B,KAA6C,OAA7C,CAEA,OAASC,OAAT,CAAkBC,UAAlB,CAA8BC,UAA9B,KAAgD,mBAAhD,CACA,MAAOC,CAAAA,eAAP,KAA4B,gCAA5B,C,2CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACvBC,WAAW,8BACTC,UAAU,CAAE,qBADH,EAENF,KAAK,CAACG,UAAN,CAAiBC,OAFX,MAGTC,KAAK,CAAEL,KAAK,CAACM,OAAN,CAAcC,MAAd,CAAqBC,KAHnB,EADY,CAMvBC,OAAO,CAAE,CACPC,aAAa,CAAE,QADR,CAEPC,QAAQ,CAAE,SAFH,CANc,CAUvBC,QAAQ,CAAE,CACRC,UAAU,CAAEb,KAAK,CAACc,OAAN,CAAc,CAAd,CADJ,CAER,4BAA6B,CAC3BD,UAAU,CAAEb,KAAK,CAACc,OAAN,CAAc,GAAd,CADe,CAFrB,CAKRC,UAAU,CAAEf,KAAK,CAACgB,WAAN,CAAkBC,MAAlB,CAAyB,CAAC,OAAD,CAAzB,CAAoC,CAC9CC,QAAQ,CAAElB,KAAK,CAACgB,WAAN,CAAkBE,QAAlB,CAA2BC,KADS,CAE9CC,MAAM,CAAEpB,KAAK,CAACgB,WAAN,CAAkBI,MAAlB,CAAyBC,SAFa,CAApC,CALJ,CAVa,CAAL,EAApB,CAsBA,QAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,CACvB,GAAQC,CAAAA,OAAR,CAA2BD,KAA3B,CAAQC,OAAR,CAAiBC,KAAjB,CAA2BF,KAA3B,CAAiBE,KAAjB,CACA,cAAkChC,QAAQ,CAAC,KAAD,CAA1C,wCAAOiC,SAAP,eAAkBC,YAAlB,eAEA,GAAMC,CAAAA,WAAW,CAAGlC,WAAW,CAAC,UAAM,CACpCiC,YAAY,CAAC,IAAD,CAAZ,CACD,CAF8B,CAE5B,EAF4B,CAA/B,CAIA,GAAME,CAAAA,YAAY,CAAGnC,WAAW,CAAC,UAAM,CACrCiC,YAAY,CAAC,KAAD,CAAZ,CACD,CAF+B,CAE7B,EAF6B,CAAhC,CAIA,mBACE,KAAC,OAAD,EACE,KAAK,cACH,KAAC,UAAD,EAAY,OAAO,CAAC,OAApB,CAA4B,SAAS,CAAEH,OAAO,CAACvB,WAA/C,UACGwB,KADH,EAFJ,CAME,SAAS,CAAED,OAAO,CAACf,OANrB,CAOE,eAAe,CAAE,GAPnB,uBASE,KAAC,eACC;AACR;AACA;AACA,aAJM,EAKE,WAAW,CAAEmB,WALf,CAME,OAAO,CAAEA,WANX,CAOE,MAAM,CAAEC,YAPV,CAQE,YAAY,CAAEA,YARhB,CASE,KAAK,CAAEH,SAAS,CAAG,SAAH,CAAe,SATjC,CAUE,SAAS,CAAEF,OAAO,CAACZ,QAVrB,CAWE,KAAK,CAAE,CAAEkB,MAAM,CAAEJ,SAAS,CAAG,SAAH,CAAe,MAAlC,CAXT,EATF,EADF,CAyBD,CAOD,cAAe7B,CAAAA,UAAU,CAACE,MAAD,CAAS,CAAEgC,SAAS,CAAE,IAAb,CAAT,CAAV,CAAwCT,QAAxC,CAAf","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Tooltip, Typography, withStyles } from \"@material-ui/core\";\nimport HelpIconOutline from \"@material-ui/icons/HelpOutline\";\n\nconst styles = theme => ({\n  tooltipTypo: {\n    whiteSpace: \"pre-line !important\",\n    ...theme.typography.caption,\n    color: theme.palette.common.white\n  },\n  tooltip: {\n    verticalAlign: \"middle\",\n    fontSize: \"1.25rem\"\n  },\n  helpIcon: {\n    marginLeft: theme.spacing(1),\n    \"@media (max-width: 350px)\": {\n      marginLeft: theme.spacing(0.5)\n    },\n    transition: theme.transitions.create([\"color\"], {\n      duration: theme.transitions.duration.short,\n      easing: theme.transitions.easing.easeInOut\n    })\n  }\n});\n\nfunction HelpIcon(props) {\n  const { classes, title } = props;\n  const [isHovered, setIsHovered] = useState(false);\n\n  const onMouseOver = useCallback(() => {\n    setIsHovered(true);\n  }, []);\n\n  const onMouseLeave = useCallback(() => {\n    setIsHovered(false);\n  }, []);\n\n  return (\n    <Tooltip\n      title={\n        <Typography variant=\"body2\" className={classes.tooltipTypo}>\n          {title}\n        </Typography>\n      }\n      className={classes.tooltip}\n      enterTouchDelay={300}\n    >\n      <HelpIconOutline\n        /**\n         * We have to use onMouseOver and not onMouseEnter, because if we have overlapping\n         * tooltips, the onMouseEnter wont fire when the old tooltip is fading\n         * */\n        onMouseOver={onMouseOver}\n        onFocus={onMouseOver}\n        onBlur={onMouseLeave}\n        onMouseLeave={onMouseLeave}\n        color={isHovered ? \"primary\" : \"inherit\"}\n        className={classes.helpIcon}\n        style={{ cursor: isHovered ? \"pointer\" : \"auto\" }}\n      />\n    </Tooltip>\n  );\n}\n\nHelpIcon.propTypes = {\n  classes: PropTypes.object,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node])\n};\n\nexport default withStyles(styles, { withTheme: true })(HelpIcon);\n"]},"metadata":{},"sourceType":"module"}