{"ast":null,"code":"import _objectSpread from\"/Users/francocastromiranda/dubai/teste/brandu/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/francocastromiranda/dubai/teste/brandu/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState,useCallback}from\"react\";import{Button,Box}from\"@material-ui/core\";import ActionPaper from\"../../../shared/components/ActionPaper\";import ButtonCircularProgress from\"../../../shared/components/ButtonCircularProgress\";import AddPostOptions from\"./AddPostOptions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function AddPost(props){var pushMessageToSnackbar=props.pushMessageToSnackbar,Dropzone=props.Dropzone,EmojiTextArea=props.EmojiTextArea,DateTimePicker=props.DateTimePicker,ImageCropper=props.ImageCropper,onClose=props.onClose;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),files=_useState2[0],setFiles=_useState2[1];var _useState3=useState(new Date()),_useState4=_slicedToArray(_useState3,2),uploadAt=_useState4[0],setUploadAt=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),cropperFile=_useState8[0],setCropperFile=_useState8[1];var acceptDrop=useCallback(function(file){setFiles([file]);},[setFiles]);var onDrop=useCallback(function(acceptedFiles,rejectedFiles){if(acceptedFiles.length+rejectedFiles.length>1){pushMessageToSnackbar({isErrorMessage:true,text:\"You cannot upload more than one file at once\"});}else if(acceptedFiles.length===0){pushMessageToSnackbar({isErrorMessage:true,text:\"The file you wanted to upload isn't an image\"});}else if(acceptedFiles.length===1){var file=acceptedFiles[0];file.preview=URL.createObjectURL(file);file.key=new Date().getTime();setCropperFile(file);}},[pushMessageToSnackbar,setCropperFile]);var onCropperClose=useCallback(function(){setCropperFile(null);},[setCropperFile]);var deleteItem=useCallback(function(){setCropperFile(null);setFiles([]);},[setCropperFile,setFiles]);var onCrop=useCallback(function(dataUrl){var file=_objectSpread({},cropperFile);file.preview=dataUrl;acceptDrop(file);setCropperFile(null);},[acceptDrop,cropperFile,setCropperFile]);var handleUpload=useCallback(function(){setLoading(true);setTimeout(function(){pushMessageToSnackbar({text:\"Your post has been uploaded\"});onClose();},1500);},[setLoading,onClose,pushMessageToSnackbar]);return/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsx(ActionPaper,{helpPadding:true,maxWidth:\"md\",content:/*#__PURE__*/_jsx(AddPostOptions,{EmojiTextArea:EmojiTextArea,Dropzone:Dropzone,files:files,onDrop:onDrop,deleteItem:deleteItem,DateTimePicker:DateTimePicker,uploadAt:uploadAt,onChangeUploadAt:setUploadAt,onCrop:onCrop,ImageCropper:ImageCropper,cropperFile:cropperFile,onCropperClose:onCropperClose}),actions:/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Box,{mr:1,children:/*#__PURE__*/_jsx(Button,{onClick:onClose,disabled:loading,children:\"Back\"})}),/*#__PURE__*/_jsxs(Button,{onClick:handleUpload,variant:\"contained\",color:\"secondary\",disabled:files.length===0||loading,children:[\"Upload \",loading&&/*#__PURE__*/_jsx(ButtonCircularProgress,{})]})]})})});}export default AddPost;","map":{"version":3,"sources":["/Users/francocastromiranda/dubai/teste/brandu/src/logged_in/components/posts/AddPost.js"],"names":["React","Fragment","useState","useCallback","Button","Box","ActionPaper","ButtonCircularProgress","AddPostOptions","AddPost","props","pushMessageToSnackbar","Dropzone","EmojiTextArea","DateTimePicker","ImageCropper","onClose","files","setFiles","Date","uploadAt","setUploadAt","loading","setLoading","cropperFile","setCropperFile","acceptDrop","file","onDrop","acceptedFiles","rejectedFiles","length","isErrorMessage","text","preview","URL","createObjectURL","key","getTime","onCropperClose","deleteItem","onCrop","dataUrl","handleUpload","setTimeout"],"mappings":"uUAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,QAA1B,CAAoCC,WAApC,KAAuD,OAAvD,CAEA,OAASC,MAAT,CAAiBC,GAAjB,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,WAAP,KAAwB,wCAAxB,CACA,MAAOC,CAAAA,sBAAP,KAAmC,mDAAnC,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,C,wFAEA,QAASC,CAAAA,OAAT,CAAiBC,KAAjB,CAAwB,CACtB,GACEC,CAAAA,qBADF,CAOID,KAPJ,CACEC,qBADF,CAEEC,QAFF,CAOIF,KAPJ,CAEEE,QAFF,CAGEC,aAHF,CAOIH,KAPJ,CAGEG,aAHF,CAIEC,cAJF,CAOIJ,KAPJ,CAIEI,cAJF,CAKEC,YALF,CAOIL,KAPJ,CAKEK,YALF,CAMEC,OANF,CAOIN,KAPJ,CAMEM,OANF,CASA,cAA0Bd,QAAQ,CAAC,EAAD,CAAlC,wCAAOe,KAAP,eAAcC,QAAd,eACA,eAAgChB,QAAQ,CAAC,GAAIiB,CAAAA,IAAJ,EAAD,CAAxC,yCAAOC,QAAP,eAAiBC,WAAjB,eACA,eAA8BnB,QAAQ,CAAC,KAAD,CAAtC,yCAAOoB,OAAP,eAAgBC,UAAhB,eACA,eAAsCrB,QAAQ,CAAC,IAAD,CAA9C,yCAAOsB,WAAP,eAAoBC,cAApB,eAEA,GAAMC,CAAAA,UAAU,CAAGvB,WAAW,CAC5B,SAACwB,IAAD,CAAU,CACRT,QAAQ,CAAC,CAACS,IAAD,CAAD,CAAR,CACD,CAH2B,CAI5B,CAACT,QAAD,CAJ4B,CAA9B,CAOA,GAAMU,CAAAA,MAAM,CAAGzB,WAAW,CACxB,SAAC0B,aAAD,CAAgBC,aAAhB,CAAkC,CAChC,GAAID,aAAa,CAACE,MAAd,CAAuBD,aAAa,CAACC,MAArC,CAA8C,CAAlD,CAAqD,CACnDpB,qBAAqB,CAAC,CACpBqB,cAAc,CAAE,IADI,CAEpBC,IAAI,CAAE,8CAFc,CAAD,CAArB,CAID,CALD,IAKO,IAAIJ,aAAa,CAACE,MAAd,GAAyB,CAA7B,CAAgC,CACrCpB,qBAAqB,CAAC,CACpBqB,cAAc,CAAE,IADI,CAEpBC,IAAI,CAAE,8CAFc,CAAD,CAArB,CAID,CALM,IAKA,IAAIJ,aAAa,CAACE,MAAd,GAAyB,CAA7B,CAAgC,CACrC,GAAMJ,CAAAA,IAAI,CAAGE,aAAa,CAAC,CAAD,CAA1B,CACAF,IAAI,CAACO,OAAL,CAAeC,GAAG,CAACC,eAAJ,CAAoBT,IAApB,CAAf,CACAA,IAAI,CAACU,GAAL,CAAW,GAAIlB,CAAAA,IAAJ,GAAWmB,OAAX,EAAX,CACAb,cAAc,CAACE,IAAD,CAAd,CACD,CACF,CAlBuB,CAmBxB,CAAChB,qBAAD,CAAwBc,cAAxB,CAnBwB,CAA1B,CAsBA,GAAMc,CAAAA,cAAc,CAAGpC,WAAW,CAAC,UAAM,CACvCsB,cAAc,CAAC,IAAD,CAAd,CACD,CAFiC,CAE/B,CAACA,cAAD,CAF+B,CAAlC,CAIA,GAAMe,CAAAA,UAAU,CAAGrC,WAAW,CAAC,UAAM,CACnCsB,cAAc,CAAC,IAAD,CAAd,CACAP,QAAQ,CAAC,EAAD,CAAR,CACD,CAH6B,CAG3B,CAACO,cAAD,CAAiBP,QAAjB,CAH2B,CAA9B,CAKA,GAAMuB,CAAAA,MAAM,CAAGtC,WAAW,CACxB,SAACuC,OAAD,CAAa,CACX,GAAMf,CAAAA,IAAI,kBAAQH,WAAR,CAAV,CACAG,IAAI,CAACO,OAAL,CAAeQ,OAAf,CACAhB,UAAU,CAACC,IAAD,CAAV,CACAF,cAAc,CAAC,IAAD,CAAd,CACD,CANuB,CAOxB,CAACC,UAAD,CAAaF,WAAb,CAA0BC,cAA1B,CAPwB,CAA1B,CAUA,GAAMkB,CAAAA,YAAY,CAAGxC,WAAW,CAAC,UAAM,CACrCoB,UAAU,CAAC,IAAD,CAAV,CACAqB,UAAU,CAAC,UAAM,CACfjC,qBAAqB,CAAC,CACpBsB,IAAI,CAAE,6BADc,CAAD,CAArB,CAGAjB,OAAO,GACR,CALS,CAKP,IALO,CAAV,CAMD,CAR+B,CAQ7B,CAACO,UAAD,CAAaP,OAAb,CAAsBL,qBAAtB,CAR6B,CAAhC,CAUA,mBACE,KAAC,QAAD,wBACE,KAAC,WAAD,EACE,WAAW,KADb,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,cACL,KAAC,cAAD,EACE,aAAa,CAAEE,aADjB,CAEE,QAAQ,CAAED,QAFZ,CAGE,KAAK,CAAEK,KAHT,CAIE,MAAM,CAAEW,MAJV,CAKE,UAAU,CAAEY,UALd,CAME,cAAc,CAAE1B,cANlB,CAOE,QAAQ,CAAEM,QAPZ,CAQE,gBAAgB,CAAEC,WARpB,CASE,MAAM,CAAEoB,MATV,CAUE,YAAY,CAAE1B,YAVhB,CAWE,WAAW,CAAES,WAXf,CAYE,cAAc,CAAEe,cAZlB,EAJJ,CAmBE,OAAO,cACL,MAAC,QAAD,yBACE,KAAC,GAAD,EAAK,EAAE,CAAE,CAAT,uBACE,KAAC,MAAD,EAAQ,OAAO,CAAEvB,OAAjB,CAA0B,QAAQ,CAAEM,OAApC,kBADF,EADF,cAME,MAAC,MAAD,EACE,OAAO,CAAEqB,YADX,CAEE,OAAO,CAAC,WAFV,CAGE,KAAK,CAAC,WAHR,CAIE,QAAQ,CAAE1B,KAAK,CAACc,MAAN,GAAiB,CAAjB,EAAsBT,OAJlC,qBAMUA,OAAO,eAAI,KAAC,sBAAD,IANrB,GANF,GApBJ,EADF,EADF,CAyCD,CAWD,cAAeb,CAAAA,OAAf","sourcesContent":["import React, { Fragment, useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Box } from \"@material-ui/core\";\nimport ActionPaper from \"../../../shared/components/ActionPaper\";\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\nimport AddPostOptions from \"./AddPostOptions\";\n\nfunction AddPost(props) {\n  const {\n    pushMessageToSnackbar,\n    Dropzone,\n    EmojiTextArea,\n    DateTimePicker,\n    ImageCropper,\n    onClose,\n  } = props;\n\n  const [files, setFiles] = useState([]);\n  const [uploadAt, setUploadAt] = useState(new Date());\n  const [loading, setLoading] = useState(false);\n  const [cropperFile, setCropperFile] = useState(null);\n\n  const acceptDrop = useCallback(\n    (file) => {\n      setFiles([file]);\n    },\n    [setFiles]\n  );\n\n  const onDrop = useCallback(\n    (acceptedFiles, rejectedFiles) => {\n      if (acceptedFiles.length + rejectedFiles.length > 1) {\n        pushMessageToSnackbar({\n          isErrorMessage: true,\n          text: \"You cannot upload more than one file at once\",\n        });\n      } else if (acceptedFiles.length === 0) {\n        pushMessageToSnackbar({\n          isErrorMessage: true,\n          text: \"The file you wanted to upload isn't an image\",\n        });\n      } else if (acceptedFiles.length === 1) {\n        const file = acceptedFiles[0];\n        file.preview = URL.createObjectURL(file);\n        file.key = new Date().getTime();\n        setCropperFile(file);\n      }\n    },\n    [pushMessageToSnackbar, setCropperFile]\n  );\n\n  const onCropperClose = useCallback(() => {\n    setCropperFile(null);\n  }, [setCropperFile]);\n\n  const deleteItem = useCallback(() => {\n    setCropperFile(null);\n    setFiles([]);\n  }, [setCropperFile, setFiles]);\n\n  const onCrop = useCallback(\n    (dataUrl) => {\n      const file = { ...cropperFile };\n      file.preview = dataUrl;\n      acceptDrop(file);\n      setCropperFile(null);\n    },\n    [acceptDrop, cropperFile, setCropperFile]\n  );\n\n  const handleUpload = useCallback(() => {\n    setLoading(true);\n    setTimeout(() => {\n      pushMessageToSnackbar({\n        text: \"Your post has been uploaded\",\n      });\n      onClose();\n    }, 1500);\n  }, [setLoading, onClose, pushMessageToSnackbar]);\n\n  return (\n    <Fragment>\n      <ActionPaper\n        helpPadding\n        maxWidth=\"md\"\n        content={\n          <AddPostOptions\n            EmojiTextArea={EmojiTextArea}\n            Dropzone={Dropzone}\n            files={files}\n            onDrop={onDrop}\n            deleteItem={deleteItem}\n            DateTimePicker={DateTimePicker}\n            uploadAt={uploadAt}\n            onChangeUploadAt={setUploadAt}\n            onCrop={onCrop}\n            ImageCropper={ImageCropper}\n            cropperFile={cropperFile}\n            onCropperClose={onCropperClose}\n          />\n        }\n        actions={\n          <Fragment>\n            <Box mr={1}>\n              <Button onClick={onClose} disabled={loading}>\n                Back\n              </Button>\n            </Box>\n            <Button\n              onClick={handleUpload}\n              variant=\"contained\"\n              color=\"secondary\"\n              disabled={files.length === 0 || loading}\n            >\n              Upload {loading && <ButtonCircularProgress />}\n            </Button>\n          </Fragment>\n        }\n      />\n    </Fragment>\n  );\n}\n\nAddPost.propTypes = {\n  pushMessageToSnackbar: PropTypes.func,\n  onClose: PropTypes.func,\n  Dropzone: PropTypes.elementType,\n  EmojiTextArea: PropTypes.elementType,\n  DateTimePicker: PropTypes.elementType,\n  ImageCropper: PropTypes.elementType,\n};\n\nexport default AddPost;\n"]},"metadata":{},"sourceType":"module"}