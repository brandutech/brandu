{"ast":null,"code":"import React from\"react\";import classNames from\"classnames\";import{Paper,Toolbar,ListItemText,ListItemSecondaryAction,ListItemIcon,Switch,Box,withStyles}from\"@material-ui/core\";import LoopIcon from\"@material-ui/icons/Loop\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var styles=function styles(theme){return{paper:{borderBottomLeftRadius:0,borderBottomRightRadius:0},toolbar:{justifyContent:\"space-between\"},scaleMinus:{transform:\"scaleX(-1)\"},\"@keyframes spin\":{from:{transform:\"rotate(359deg)\"},to:{transform:\"rotate(0deg)\"}},spin:{animation:\"$spin 2s infinite linear\"},listItemSecondaryAction:{paddingRight:theme.spacing(1)}};};function AccountInformationArea(props){var classes=props.classes,toggleAccountActivation=props.toggleAccountActivation,isAccountActivated=props.isAccountActivated;return/*#__PURE__*/_jsx(Paper,{className:classes.paper,children:/*#__PURE__*/_jsxs(Toolbar,{className:classes.toolbar,children:[/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Box,{mr:2,children:/*#__PURE__*/_jsx(ListItemText,{primary:\"Status\",secondary:isAccountActivated?\"Activated\":\"Not activated\",className:\"mr-2\"})}),/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(LoopIcon,{className:classNames(isAccountActivated?classes.spin:null,classes.scaleMinus)})})]}),/*#__PURE__*/_jsx(ListItemSecondaryAction,{className:classes.listItemSecondaryAction,children:/*#__PURE__*/_jsx(Switch,{color:\"secondary\",checked:isAccountActivated,onClick:toggleAccountActivation,inputProps:{\"aria-label\":isAccountActivated?\"Deactivate Account\":\"Activate Account\"}})})]})});}export default withStyles(styles,{withTheme:true})(AccountInformationArea);","map":{"version":3,"sources":["/Users/francocastromiranda/dubai/teste/brandu/src/logged_in/components/dashboard/AccountInformationArea.js"],"names":["React","classNames","Paper","Toolbar","ListItemText","ListItemSecondaryAction","ListItemIcon","Switch","Box","withStyles","LoopIcon","styles","theme","paper","borderBottomLeftRadius","borderBottomRightRadius","toolbar","justifyContent","scaleMinus","transform","from","to","spin","animation","listItemSecondaryAction","paddingRight","spacing","AccountInformationArea","props","classes","toggleAccountActivation","isAccountActivated","withTheme"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,OACEC,KADF,CAEEC,OAFF,CAGEC,YAHF,CAIEC,uBAJF,CAKEC,YALF,CAMEC,MANF,CAOEC,GAPF,CAQEC,UARF,KASO,mBATP,CAUA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,C,wFAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACvBC,KAAK,CAAE,CACLC,sBAAsB,CAAE,CADnB,CAELC,uBAAuB,CAAE,CAFpB,CADgB,CAKvBC,OAAO,CAAE,CAAEC,cAAc,CAAE,eAAlB,CALc,CAMvBC,UAAU,CAAE,CACVC,SAAS,CAAE,YADD,CANW,CASvB,kBAAmB,CACjBC,IAAI,CAAE,CAAED,SAAS,CAAE,gBAAb,CADW,CAEjBE,EAAE,CAAE,CAAEF,SAAS,CAAE,cAAb,CAFa,CATI,CAavBG,IAAI,CAAE,CAAEC,SAAS,CAAE,0BAAb,CAbiB,CAcvBC,uBAAuB,CAAE,CAAEC,YAAY,CAAEb,KAAK,CAACc,OAAN,CAAc,CAAd,CAAhB,CAdF,CAAL,EAApB,CAiBA,QAASC,CAAAA,sBAAT,CAAgCC,KAAhC,CAAuC,CACrC,GAAQC,CAAAA,OAAR,CAAiED,KAAjE,CAAQC,OAAR,CAAiBC,uBAAjB,CAAiEF,KAAjE,CAAiBE,uBAAjB,CAA0CC,kBAA1C,CAAiEH,KAAjE,CAA0CG,kBAA1C,CACA,mBACE,KAAC,KAAD,EAAO,SAAS,CAAEF,OAAO,CAAChB,KAA1B,uBACE,MAAC,OAAD,EAAS,SAAS,CAAEgB,OAAO,CAACb,OAA5B,wBACE,MAAC,GAAD,EAAK,OAAO,CAAC,MAAb,CAAoB,UAAU,CAAC,QAA/B,wBACE,KAAC,GAAD,EAAK,EAAE,CAAE,CAAT,uBACE,KAAC,YAAD,EACE,OAAO,CAAC,QADV,CAEE,SAAS,CAAEe,kBAAkB,CAAG,WAAH,CAAiB,eAFhD,CAGE,SAAS,CAAC,MAHZ,EADF,EADF,cAQE,KAAC,YAAD,wBACE,KAAC,QAAD,EACE,SAAS,CAAE9B,UAAU,CACnB8B,kBAAkB,CAAGF,OAAO,CAACP,IAAX,CAAkB,IADjB,CAEnBO,OAAO,CAACX,UAFW,CADvB,EADF,EARF,GADF,cAkBE,KAAC,uBAAD,EAAyB,SAAS,CAAEW,OAAO,CAACL,uBAA5C,uBACE,KAAC,MAAD,EACE,KAAK,CAAC,WADR,CAEE,OAAO,CAAEO,kBAFX,CAGE,OAAO,CAAED,uBAHX,CAIE,UAAU,CAAE,CACV,aAAcC,kBAAkB,CAC5B,oBAD4B,CAE5B,kBAHM,CAJd,EADF,EAlBF,GADF,EADF,CAmCD,CASD,cAAetB,CAAAA,UAAU,CAACE,MAAD,CAAS,CAAEqB,SAAS,CAAE,IAAb,CAAT,CAAV,CAAwCL,sBAAxC,CAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport {\n  Paper,\n  Toolbar,\n  ListItemText,\n  ListItemSecondaryAction,\n  ListItemIcon,\n  Switch,\n  Box,\n  withStyles\n} from \"@material-ui/core\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\n\nconst styles = theme => ({\n  paper: {\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0\n  },\n  toolbar: { justifyContent: \"space-between\" },\n  scaleMinus: {\n    transform: \"scaleX(-1)\"\n  },\n  \"@keyframes spin\": {\n    from: { transform: \"rotate(359deg)\" },\n    to: { transform: \"rotate(0deg)\" }\n  },\n  spin: { animation: \"$spin 2s infinite linear\" },\n  listItemSecondaryAction: { paddingRight: theme.spacing(1) }\n});\n\nfunction AccountInformationArea(props) {\n  const { classes, toggleAccountActivation, isAccountActivated } = props;\n  return (\n    <Paper className={classes.paper}>\n      <Toolbar className={classes.toolbar}>\n        <Box display=\"flex\" alignItems=\"center\">\n          <Box mr={2}>\n            <ListItemText\n              primary=\"Status\"\n              secondary={isAccountActivated ? \"Activated\" : \"Not activated\"}\n              className=\"mr-2\"\n            />\n          </Box>\n          <ListItemIcon>\n            <LoopIcon\n              className={classNames(\n                isAccountActivated ? classes.spin : null,\n                classes.scaleMinus\n              )}\n            />\n          </ListItemIcon>\n        </Box>\n        <ListItemSecondaryAction className={classes.listItemSecondaryAction}>\n          <Switch\n            color=\"secondary\"\n            checked={isAccountActivated}\n            onClick={toggleAccountActivation}\n            inputProps={{\n              \"aria-label\": isAccountActivated\n                ? \"Deactivate Account\"\n                : \"Activate Account\"\n            }}\n          />\n        </ListItemSecondaryAction>\n      </Toolbar>\n    </Paper>\n  );\n}\n\nAccountInformationArea.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n  toggleAccountActivation: PropTypes.func.isRequired,\n  isAccountActivated: PropTypes.bool.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(AccountInformationArea);\n"]},"metadata":{},"sourceType":"module"}