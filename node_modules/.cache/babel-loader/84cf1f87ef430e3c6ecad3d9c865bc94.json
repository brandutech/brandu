{"ast":null,"code":"var _jsxFileName = \"/Users/francocastromiranda/dubai/teste/brandu/src/shared/components/ColoredButton.js\";\nimport React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, createMuiTheme, MuiThemeProvider } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ColoredButton(props) {\n  const {\n    color,\n    children,\n    theme\n  } = props;\n  const buttonTheme = createMuiTheme({ ...theme,\n    palette: {\n      primary: {\n        main: color\n      }\n    }\n  });\n\n  const buttonProps = (_ref => {\n    let {\n      color,\n      theme,\n      children,\n      ...o\n    } = _ref;\n    return o;\n  })(props);\n\n  return /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n    theme: buttonTheme,\n    children: /*#__PURE__*/_jsxDEV(Button, { ...buttonProps,\n      color: \"primary\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ColoredButton;\nColoredButton.propTypes = {\n  color: PropTypes.string.isRequired\n};\nexport default _c2 = /*#__PURE__*/memo(ColoredButton);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ColoredButton\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/francocastromiranda/dubai/teste/brandu/src/shared/components/ColoredButton.js"],"names":["React","memo","PropTypes","Button","createMuiTheme","MuiThemeProvider","ColoredButton","props","color","children","theme","buttonTheme","palette","primary","main","buttonProps","o","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,cAAjB,EAAiCC,gBAAjC,QAAyD,mBAAzD;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,MAA6BH,KAAnC;AACA,QAAMI,WAAW,GAAGP,cAAc,CAAC,EACjC,GAAGM,KAD8B;AAEjCE,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAEN;AADC;AADF;AAFwB,GAAD,CAAlC;;AAQA,QAAMO,WAAW,GAAG,CAAC;AAAA,QAAC;AAAEP,MAAAA,KAAF;AAASE,MAAAA,KAAT;AAAgBD,MAAAA,QAAhB;AAA0B,SAAGO;AAA7B,KAAD;AAAA,WAAsCA,CAAtC;AAAA,GAAD,EAA0CT,KAA1C,CAApB;;AACA,sBACE,QAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEI,WAAzB;AAAA,2BACE,QAAC,MAAD,OAAYI,WAAZ;AAAyB,MAAA,KAAK,EAAC,SAA/B;AAAA,gBACGN;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;KAlBQH,a;AAoBTA,aAAa,CAACW,SAAd,GAA0B;AACxBT,EAAAA,KAAK,EAAEN,SAAS,CAACgB,MAAV,CAAiBC;AADA,CAA1B;AAIA,kCAAelB,IAAI,CAACK,aAAD,CAAnB","sourcesContent":["import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, createMuiTheme, MuiThemeProvider } from \"@material-ui/core\";\n\nfunction ColoredButton(props) {\n  const { color, children, theme } = props;\n  const buttonTheme = createMuiTheme({\n    ...theme,\n    palette: {\n      primary: {\n        main: color\n      }\n    }\n  });\n  const buttonProps = (({ color, theme, children, ...o }) => o)(props);\n  return (\n    <MuiThemeProvider theme={buttonTheme}>\n      <Button {...buttonProps} color=\"primary\">\n        {children}\n      </Button>\n    </MuiThemeProvider>\n  );\n}\n\nColoredButton.propTypes = {\n  color: PropTypes.string.isRequired\n};\n\nexport default memo(ColoredButton);\n"]},"metadata":{},"sourceType":"module"}