{"ast":null,"code":"import _defineProperty from\"/Users/francocastromiranda/dubai/teste/brandu/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import React,{useEffect}from\"react\";import classNames from\"classnames\";import{Grid,Box,isWidthUp,withWidth,withStyles}from\"@material-ui/core\";import BlogCard from\"./BlogCard\";import{jsx as _jsx}from\"react/jsx-runtime\";var styles=function styles(theme){var _blogContentWrapper;return{blogContentWrapper:(_blogContentWrapper={marginLeft:theme.spacing(1),marginRight:theme.spacing(1)},_defineProperty(_blogContentWrapper,theme.breakpoints.up(\"sm\"),{marginLeft:theme.spacing(4),marginRight:theme.spacing(4)}),_defineProperty(_blogContentWrapper,\"maxWidth\",1280),_defineProperty(_blogContentWrapper,\"width\",\"100%\"),_blogContentWrapper),wrapper:{minHeight:\"60vh\"},noDecoration:{textDecoration:\"none !important\"}};};function getVerticalBlogPosts(width,blogPosts){var gridRows=[[],[],[]];var rows;var xs;if(isWidthUp(\"md\",width)){rows=3;xs=4;}else if(isWidthUp(\"sm\",width)){rows=2;xs=6;}else{rows=1;xs=12;}blogPosts.forEach(function(blogPost,index){gridRows[index%rows].push(/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Box,{mb:3,children:/*#__PURE__*/_jsx(BlogCard,{src:blogPost.src,title:blogPost.title,snippet:blogPost.snippet,date:blogPost.date,url:blogPost.url})})},blogPost.id));});return gridRows.map(function(element,index){return/*#__PURE__*/_jsx(Grid,{item:true,xs:xs,children:element},index);});}function Blog(props){var classes=props.classes,width=props.width,blogPosts=props.blogPosts,selectBlog=props.selectBlog;useEffect(function(){selectBlog();},[selectBlog]);return/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"center\",className:classNames(classes.wrapper,\"lg-p-top\"),children:/*#__PURE__*/_jsx(\"div\",{className:classes.blogContentWrapper,children:/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,children:getVerticalBlogPosts(width,blogPosts)})})});}export default withWidth()(withStyles(styles,{withTheme:true})(Blog));","map":{"version":3,"sources":["/Users/francocastromiranda/dubai/teste/brandu/src/logged_out/components/blog/Blog.js"],"names":["React","useEffect","classNames","Grid","Box","isWidthUp","withWidth","withStyles","BlogCard","styles","theme","blogContentWrapper","marginLeft","spacing","marginRight","breakpoints","up","wrapper","minHeight","noDecoration","textDecoration","getVerticalBlogPosts","width","blogPosts","gridRows","rows","xs","forEach","blogPost","index","push","src","title","snippet","date","url","id","map","element","Blog","props","classes","selectBlog","withTheme"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { Grid, Box, isWidthUp, withWidth, withStyles } from \"@material-ui/core\";\nimport BlogCard from \"./BlogCard\";\n\nconst styles = (theme) => ({\n  blogContentWrapper: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(4),\n      marginRight: theme.spacing(4),\n    },\n    maxWidth: 1280,\n    width: \"100%\",\n  },\n  wrapper: {\n    minHeight: \"60vh\",\n  },\n  noDecoration: {\n    textDecoration: \"none !important\",\n  },\n});\n\nfunction getVerticalBlogPosts(width, blogPosts) {\n  const gridRows = [[], [], []];\n  let rows;\n  let xs;\n  if (isWidthUp(\"md\", width)) {\n    rows = 3;\n    xs = 4;\n  } else if (isWidthUp(\"sm\", width)) {\n    rows = 2;\n    xs = 6;\n  } else {\n    rows = 1;\n    xs = 12;\n  }\n  blogPosts.forEach((blogPost, index) => {\n    gridRows[index % rows].push(\n      <Grid key={blogPost.id} item xs={12}>\n        <Box mb={3}>\n          <BlogCard\n            src={blogPost.src}\n            title={blogPost.title}\n            snippet={blogPost.snippet}\n            date={blogPost.date}\n            url={blogPost.url}\n          />\n        </Box>\n      </Grid>\n    );\n  });\n  return gridRows.map((element, index) => (\n    <Grid key={index} item xs={xs}>\n      {element}\n    </Grid>\n  ));\n}\n\nfunction Blog(props) {\n  const { classes, width, blogPosts, selectBlog } = props;\n\n  useEffect(() => {\n    selectBlog();\n  }, [selectBlog]);\n\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      className={classNames(classes.wrapper, \"lg-p-top\")}\n    >\n      <div className={classes.blogContentWrapper}>\n        <Grid container spacing={3}>\n          {getVerticalBlogPosts(width, blogPosts)}\n        </Grid>\n      </div>\n    </Box>\n  );\n}\n\nBlog.propTypes = {\n  selectBlog: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  width: PropTypes.string.isRequired,\n  blogPosts: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default withWidth()(withStyles(styles, { withTheme: true })(Blog));\n"]},"metadata":{},"sourceType":"module"}