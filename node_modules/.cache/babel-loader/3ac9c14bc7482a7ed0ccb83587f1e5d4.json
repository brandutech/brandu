{"ast":null,"code":"import _objectSpread from\"/Users/francocastromiranda/dubai/teste/brandu/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Users/francocastromiranda/dubai/teste/brandu/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"component\",\"inputRef\"],_excluded2=[\"stripeOptions\",\"StripeElement\",\"select\",\"theme\"];import React from\"react\";import{TextField,withTheme}from\"@material-ui/core\";import{jsx as _jsx}from\"react/jsx-runtime\";function MyInputComponent(props){var Component=props.component,inputRef=props.inputRef,other=_objectWithoutProperties(props,_excluded);// implement `InputElement` interface\nReact.useImperativeHandle(inputRef,function(){return{focus:function focus(){// logic to focus the rendered component from 3rd party belongs here\n}// hiding the value e.g. react-stripe-elements\n};});// `Component` will be your `SomeThirdPartyComponent` from below\nreturn/*#__PURE__*/_jsx(Component,_objectSpread({},other));}function StripeTextField(props){var stripeOptions=props.stripeOptions,StripeElement=props.StripeElement,select=props.select,theme=props.theme,rest=_objectWithoutProperties(props,_excluded2);var options=_objectSpread({style:{base:_objectSpread(_objectSpread({},theme.typography.body1),{},{color:theme.palette.text.primary,fontSize:\"16px\",fontSmoothing:\"antialiased\",\"::placeholder\":{color:theme.palette.text.secondary}}),invalid:{iconColor:theme.palette.error.main,color:theme.palette.error.main}}},stripeOptions);return/*#__PURE__*/_jsx(TextField,_objectSpread({InputLabelProps:{shrink:true},inputProps:{component:StripeElement,options:options},InputProps:{inputComponent:MyInputComponent}},rest));}export default withTheme(StripeTextField);","map":{"version":3,"sources":["/Users/francocastromiranda/dubai/teste/brandu/src/logged_in/components/subscription/stripe/StripeTextField.js"],"names":["React","TextField","withTheme","MyInputComponent","props","Component","component","inputRef","other","useImperativeHandle","focus","StripeTextField","stripeOptions","StripeElement","select","theme","rest","options","style","base","typography","body1","color","palette","text","primary","fontSize","fontSmoothing","secondary","invalid","iconColor","error","main","shrink","inputComponent"],"mappings":"gcAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,CAAoBC,SAApB,KAAqC,mBAArC,C,2CAEA,QAASC,CAAAA,gBAAT,CAA0BC,KAA1B,CAAiC,CAC/B,GAAmBC,CAAAA,SAAnB,CAAqDD,KAArD,CAAQE,SAAR,CAA8BC,QAA9B,CAAqDH,KAArD,CAA8BG,QAA9B,CAA2CC,KAA3C,0BAAqDJ,KAArD,YAEA;AACAJ,KAAK,CAACS,mBAAN,CAA0BF,QAA1B,CAAoC,iBAAO,CACzCG,KAAK,CAAE,gBAAM,CACX;AACD,CACD;AAJyC,CAAP,EAApC,EAOA;AACA,mBAAO,KAAC,SAAD,kBAAeF,KAAf,EAAP,CACD,CAED,QAASG,CAAAA,eAAT,CAAyBP,KAAzB,CAAgC,CAC9B,GAAQQ,CAAAA,aAAR,CAAiER,KAAjE,CAAQQ,aAAR,CAAuBC,aAAvB,CAAiET,KAAjE,CAAuBS,aAAvB,CAAsCC,MAAtC,CAAiEV,KAAjE,CAAsCU,MAAtC,CAA8CC,KAA9C,CAAiEX,KAAjE,CAA8CW,KAA9C,CAAwDC,IAAxD,0BAAiEZ,KAAjE,aACA,GAAMa,CAAAA,OAAO,gBACXC,KAAK,CAAE,CACLC,IAAI,gCACCJ,KAAK,CAACK,UAAN,CAAiBC,KADlB,MAEFC,KAAK,CAAEP,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmBC,OAFxB,CAGFC,QAAQ,CAAE,MAHR,CAIFC,aAAa,CAAE,aAJb,CAKF,gBAAiB,CACfL,KAAK,CAAEP,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmBI,SADX,CALf,EADC,CAULC,OAAO,CAAE,CACPC,SAAS,CAAEf,KAAK,CAACQ,OAAN,CAAcQ,KAAd,CAAoBC,IADxB,CAEPV,KAAK,CAAEP,KAAK,CAACQ,OAAN,CAAcQ,KAAd,CAAoBC,IAFpB,CAVJ,CADI,EAgBRpB,aAhBQ,CAAb,CAkBA,mBACE,KAAC,SAAD,gBACE,eAAe,CAAE,CACfqB,MAAM,CAAE,IADO,CADnB,CAIE,UAAU,CAAE,CAAE3B,SAAS,CAAEO,aAAb,CAA4BI,OAAO,CAAEA,OAArC,CAJd,CAKE,UAAU,CAAE,CACViB,cAAc,CAAE/B,gBADN,CALd,EAQMa,IARN,EADF,CAYD,CAED,cAAed,CAAAA,SAAS,CAACS,eAAD,CAAxB","sourcesContent":["import React from \"react\";\nimport { TextField, withTheme } from \"@material-ui/core\";\n\nfunction MyInputComponent(props) {\n  const { component: Component, inputRef, ...other } = props;\n\n  // implement `InputElement` interface\n  React.useImperativeHandle(inputRef, () => ({\n    focus: () => {\n      // logic to focus the rendered component from 3rd party belongs here\n    }\n    // hiding the value e.g. react-stripe-elements\n  }));\n\n  // `Component` will be your `SomeThirdPartyComponent` from below\n  return <Component {...other} />;\n}\n\nfunction StripeTextField(props) {\n  const { stripeOptions, StripeElement, select, theme, ...rest } = props;\n  const options = {\n    style: {\n      base: {\n        ...theme.typography.body1,\n        color: theme.palette.text.primary,\n        fontSize: \"16px\",\n        fontSmoothing: \"antialiased\",\n        \"::placeholder\": {\n          color: theme.palette.text.secondary\n        }\n      },\n      invalid: {\n        iconColor: theme.palette.error.main,\n        color: theme.palette.error.main\n      }\n    },\n    ...stripeOptions\n  };\n  return (\n    <TextField\n      InputLabelProps={{\n        shrink: true\n      }}\n      inputProps={{ component: StripeElement, options: options }}\n      InputProps={{\n        inputComponent: MyInputComponent\n      }}\n      {...rest}\n    />\n  );\n}\n\nexport default withTheme(StripeTextField);\n"]},"metadata":{},"sourceType":"module"}