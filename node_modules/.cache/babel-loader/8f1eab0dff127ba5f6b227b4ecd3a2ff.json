{"ast":null,"code":"import _slicedToArray from\"/Users/francocastromiranda/dubai/teste/brandu/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useCallback,useRef,Fragment}from\"react\";import classNames from\"classnames\";import{withRouter}from\"react-router-dom\";import{TextField,Button,Checkbox,Typography,FormControlLabel,withStyles}from\"@material-ui/core\";import FormDialog from\"../../../shared/components/FormDialog\";import HighlightedInformation from\"../../../shared/components/HighlightedInformation\";import ButtonCircularProgress from\"../../../shared/components/ButtonCircularProgress\";import VisibilityPasswordTextField from\"../../../shared/components/VisibilityPasswordTextField\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var styles=function styles(theme){return{forgotPassword:{marginTop:theme.spacing(2),color:theme.palette.primary.main,cursor:\"pointer\",\"&:enabled:hover\":{color:theme.palette.primary.dark},\"&:enabled:focus\":{color:theme.palette.primary.dark}},disabledText:{cursor:\"auto\",color:theme.palette.text.disabled},formControlLabel:{marginRight:0}};};function LoginDialog(props){var setStatus=props.setStatus,history=props.history,classes=props.classes,onClose=props.onClose,openChangePasswordDialog=props.openChangePasswordDialog,status=props.status;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isPasswordVisible=_useState4[0],setIsPasswordVisible=_useState4[1];var loginEmail=useRef();var loginPassword=useRef();var login=useCallback(function(){setIsLoading(true);setStatus(null);if(loginEmail.current.value!==\"francocastro204@gmail.com\"){setTimeout(function(){setStatus(\"invalidEmail\");setIsLoading(false);},1500);}else if(loginPassword.current.value!==\"America706\"){setTimeout(function(){setStatus(\"invalidPassword\");setIsLoading(false);},1500);}else{setTimeout(function(){history.push(\"/c/dashboard\");},150);}},[setIsLoading,loginEmail,loginPassword,history,setStatus]);return/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsx(FormDialog,{open:true,onClose:onClose,loading:isLoading,onFormSubmit:function onFormSubmit(e){e.preventDefault();login();},hideBackdrop:true,headline:\"Login\",content:/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(TextField,{variant:\"outlined\",margin:\"normal\",error:status===\"invalidEmail\",required:true,fullWidth:true,label:\"Email Address\",inputRef:loginEmail,autoFocus:true,autoComplete:\"off\",type:\"email\",onChange:function onChange(){if(status===\"invalidEmail\"){setStatus(null);}},helperText:status===\"invalidEmail\"&&\"This email address isn't associated with an account.\",FormHelperTextProps:{error:true}}),/*#__PURE__*/_jsx(VisibilityPasswordTextField,{variant:\"outlined\",margin:\"normal\",required:true,fullWidth:true,error:status===\"invalidPassword\",label:\"Password\",inputRef:loginPassword,autoComplete:\"off\",onChange:function onChange(){if(status===\"invalidPassword\"){setStatus(null);}},helperText:status===\"invalidPassword\"?/*#__PURE__*/_jsxs(\"span\",{children:[\"Incorrect password. Try again, or click on\",\" \",/*#__PURE__*/_jsx(\"b\",{children:\"\\\"Forgot Password?\\\"\"}),\" to reset it.\"]}):\"\",FormHelperTextProps:{error:true},onVisibilityChange:setIsPasswordVisible,isVisible:isPasswordVisible}),/*#__PURE__*/_jsx(FormControlLabel,{className:classes.formControlLabel,control:/*#__PURE__*/_jsx(Checkbox,{color:\"primary\"}),label:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:\"Remember me\"})}),status===\"verificationEmailSend\"&&/*#__PURE__*/_jsx(HighlightedInformation,{children:\"We have send instructions on how to reset your password to your email address\"})]}),actions:/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsxs(Button,{type:\"submit\",fullWidth:true,variant:\"contained\",color:\"secondary\",disabled:isLoading,size:\"large\",children:[\"Login\",isLoading&&/*#__PURE__*/_jsx(ButtonCircularProgress,{})]}),/*#__PURE__*/_jsx(Typography,{align:\"center\",className:classNames(classes.forgotPassword,isLoading?classes.disabledText:null),color:\"primary\",onClick:isLoading?null:openChangePasswordDialog,tabIndex:0,role:\"button\",onKeyDown:function onKeyDown(event){// For screenreaders listen to space and enter events\nif(!isLoading&&event.keyCode===13||event.keyCode===32){openChangePasswordDialog();}},children:\"Forgot Password?\"})]})})});}export default withRouter(withStyles(styles)(LoginDialog));","map":{"version":3,"sources":["/Users/francocastromiranda/dubai/teste/brandu/src/logged_out/components/register_login/LoginDialog.js"],"names":["React","useState","useCallback","useRef","Fragment","classNames","withRouter","TextField","Button","Checkbox","Typography","FormControlLabel","withStyles","FormDialog","HighlightedInformation","ButtonCircularProgress","VisibilityPasswordTextField","styles","theme","forgotPassword","marginTop","spacing","color","palette","primary","main","cursor","dark","disabledText","text","disabled","formControlLabel","marginRight","LoginDialog","props","setStatus","history","classes","onClose","openChangePasswordDialog","status","isLoading","setIsLoading","isPasswordVisible","setIsPasswordVisible","loginEmail","loginPassword","login","current","value","setTimeout","push","e","preventDefault","error","event","keyCode"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useRef, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n  TextField,\n  Button,\n  Checkbox,\n  Typography,\n  FormControlLabel,\n  withStyles,\n} from \"@material-ui/core\";\nimport FormDialog from \"../../../shared/components/FormDialog\";\nimport HighlightedInformation from \"../../../shared/components/HighlightedInformation\";\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\nimport VisibilityPasswordTextField from \"../../../shared/components/VisibilityPasswordTextField\";\n\nconst styles = (theme) => ({\n  forgotPassword: {\n    marginTop: theme.spacing(2),\n    color: theme.palette.primary.main,\n    cursor: \"pointer\",\n    \"&:enabled:hover\": {\n      color: theme.palette.primary.dark,\n    },\n    \"&:enabled:focus\": {\n      color: theme.palette.primary.dark,\n    },\n  },\n  disabledText: {\n    cursor: \"auto\",\n    color: theme.palette.text.disabled,\n  },\n  formControlLabel: {\n    marginRight: 0,\n  },\n});\n\nfunction LoginDialog(props) {\n  const {\n    setStatus,\n    history,\n    classes,\n    onClose,\n    openChangePasswordDialog,\n    status,\n  } = props;\n  const [isLoading, setIsLoading] = useState(false);\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\n  const loginEmail = useRef();\n  const loginPassword = useRef();\n\n  const login = useCallback(() => {\n    setIsLoading(true);\n    setStatus(null);\n    if (loginEmail.current.value !== \"francocastro204@gmail.com\") {\n      setTimeout(() => {\n        setStatus(\"invalidEmail\");\n        setIsLoading(false);\n      }, 1500);\n    } else if (loginPassword.current.value !== \"America706\") {\n      setTimeout(() => {\n        setStatus(\"invalidPassword\");\n        setIsLoading(false);\n      }, 1500);\n    } else {\n      setTimeout(() => {\n        history.push(\"/c/dashboard\");\n      }, 150);\n    }\n  }, [setIsLoading, loginEmail, loginPassword, history, setStatus]);\n\n  return (\n    <Fragment>\n      <FormDialog\n        open\n        onClose={onClose}\n        loading={isLoading}\n        onFormSubmit={(e) => {\n          e.preventDefault();\n          login();\n        }}\n        hideBackdrop\n        headline=\"Login\"\n        content={\n          <Fragment>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              error={status === \"invalidEmail\"}\n              required\n              fullWidth\n              label=\"Email Address\"\n              inputRef={loginEmail}\n              autoFocus\n              autoComplete=\"off\"\n              type=\"email\"\n              onChange={() => {\n                if (status === \"invalidEmail\") {\n                  setStatus(null);\n                }\n              }}\n              helperText={\n                status === \"invalidEmail\" &&\n                \"This email address isn't associated with an account.\"\n              }\n              FormHelperTextProps={{ error: true }}\n            />\n            <VisibilityPasswordTextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              error={status === \"invalidPassword\"}\n              label=\"Password\"\n              inputRef={loginPassword}\n              autoComplete=\"off\"\n              onChange={() => {\n                if (status === \"invalidPassword\") {\n                  setStatus(null);\n                }\n              }}\n              helperText={\n                status === \"invalidPassword\" ? (\n                  <span>\n                    Incorrect password. Try again, or click on{\" \"}\n                    <b>&quot;Forgot Password?&quot;</b> to reset it.\n                  </span>\n                ) : (\n                  \"\"\n                )\n              }\n              FormHelperTextProps={{ error: true }}\n              onVisibilityChange={setIsPasswordVisible}\n              isVisible={isPasswordVisible}\n            />\n            <FormControlLabel\n              className={classes.formControlLabel}\n              control={<Checkbox color=\"primary\" />}\n              label={<Typography variant=\"body1\">Remember me</Typography>}\n            />\n            {status === \"verificationEmailSend\" && (\n              <HighlightedInformation>\n                We have send instructions on how to reset your password to your\n                email address\n              </HighlightedInformation>\n            )}\n          </Fragment>\n        }\n        actions={\n          <Fragment>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"secondary\"\n              disabled={isLoading}\n              size=\"large\"\n            >\n              Login\n              {isLoading && <ButtonCircularProgress />}\n            </Button>\n            <Typography\n              align=\"center\"\n              className={classNames(\n                classes.forgotPassword,\n                isLoading ? classes.disabledText : null\n              )}\n              color=\"primary\"\n              onClick={isLoading ? null : openChangePasswordDialog}\n              tabIndex={0}\n              role=\"button\"\n              onKeyDown={(event) => {\n                // For screenreaders listen to space and enter events\n                if (\n                  (!isLoading && event.keyCode === 13) ||\n                  event.keyCode === 32\n                ) {\n                  openChangePasswordDialog();\n                }\n              }}\n            >\n              Forgot Password?\n            </Typography>\n          </Fragment>\n        }\n      />\n    </Fragment>\n  );\n}\n\nLoginDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired,\n  setStatus: PropTypes.func.isRequired,\n  openChangePasswordDialog: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired,\n  status: PropTypes.string,\n};\n\nexport default withRouter(withStyles(styles)(LoginDialog));\n"]},"metadata":{},"sourceType":"module"}